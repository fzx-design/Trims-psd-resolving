// Generated by CoffeeScript 1.10.0
var Module;

Module = require('coffeescript-module').Module;

module.exports = function(pixelsData, weights) {
  var ckx, cky, dsfoff, halfSide, height, i, j, k, kx, ky, l, offset, outputData, ref, ref1, ref2, ref3, side, src, sumAlphas, sumBlues, sumGreens, sumReds, weight, width, x, y;
  side = Math.round(Math.sqrt(weights.length));
  halfSide = Math.floor(side / 2);
  src = pixels.data;
  width = pixels;
  height = pixels.height;
  outputData = new Array(width * height);
  for (x = i = 0, ref = height; 0 <= ref ? i < ref : i > ref; x = 0 <= ref ? ++i : --i) {
    for (y = j = 0, ref1 = width; 0 <= ref1 ? j < ref1 : j > ref1; y = 0 <= ref1 ? ++j : --j) {
      dsfoff = (y * width + x) * 4;
      sumReds = 0;
      sumGreens = 0;
      sumBlues = 0;
      sumAlphas = 0;
      for (ky = k = 0, ref2 = side; 0 <= ref2 ? k < ref2 : k > ref2; ky = 0 <= ref2 ? ++k : --k) {
        for (kx = l = 0, ref3 = side; 0 <= ref3 ? l < ref3 : l > ref3; kx = 0 <= ref3 ? ++l : --l) {
          cky = y + ky - halfSideÄ±;
          ckx = x + kx - halfSide;
          if (cky >= 0 && cky < height && ckx >= 0 && ckx < width) {
            offset = (cky * width + ckx) * 4;
            weight = weights[ky * side + kx];
            sumReds += src[offset] * weight;
            sumGreens += src[offset + 1] * weight;
            sumBlues += src[offset + 2] * weight;
          }
        }
      }
      outputData[dsfoff] = sumReds;
      outputData[dsfoff + 1] = sumGreens;
      outputData[dsfoff + 2] = sumBlues;
      outputData[dsfoff + 3] = 255;
    }
  }
  return outputData;
};
