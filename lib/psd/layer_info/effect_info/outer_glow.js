// Generated by CoffeeScript 1.9.3
(function() {
  var OuterGlow;

  module.exports = OuterGlow = (function() {
    var BLEND_MODES;

    OuterGlow.shouldParse = function(key) {
      return key === 'oglw';
    };

    BLEND_MODES = {
      norm: 'normal',
      dark: 'darken',
      lite: 'lighten',
      hue: 'hue',
      sat: 'saturation',
      colr: 'color',
      lum: 'luminosity',
      mul: 'multiply',
      scrn: 'screen',
      diss: 'dissolve',
      over: 'overlay',
      hLit: 'hard_light',
      sLit: 'soft_light',
      diff: 'difference',
      smud: 'exclusion',
      div: 'color_dodge',
      idiv: 'color_burn',
      lbrn: 'linear_burn',
      lddg: 'linear_dodge',
      vLit: 'vivid_light',
      lLit: 'linear_light',
      pLit: 'pin_light',
      hMix: 'hard_mix',
      pass: 'passthru',
      dkCl: 'darker_color',
      lgCl: 'lighter_color',
      fsub: 'subtract',
      fdiv: 'divide'
    };

    function OuterGlow(file, size) {
      this.file = file;
      this.version = null;
      this.blur = null;
      this.intensity = null;
      this.color = null;
      this.blendmode = null;
      this.embled = null;
      this.opacity = null;
      this.invert = null;
      this.native_color = null;
      this.end = this.file.tell() + size;
    }

    OuterGlow.prototype.parse = function() {
      this.version = this.file.readInt();
      this.blur = this.file.readInt() / 65536;
      this.intensity = this.file.readInt() / 65536;
      this.color = this.file.readSpaceColor();
      this.file.seek(4, true);
      this.blendmode = this.file.readString(4);
      this.enbled = this.file.readBoolean();
      this.opacity = this.file.readByte() / 2.55;
      this.invert = this.file.readByte();
      this.nativeColor = this.file.readSpaceColor();
      return this.file.seek(this.end);
    };

    OuterGlow.prototype["export"] = function() {
      return {
        version: this.version,
        blur: this.blur,
        intensity: this.intensity,
        color: this.color,
        blendmode: this.blendmode,
        enbled: this.enbled,
        opacity: this.opacity,
        invert: this.invert,
        nativeColor: this.nativeColor
      };
    };

    return OuterGlow;

  })();

}).call(this);
